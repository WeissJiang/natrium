plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'nano'

sourceCompatibility = '14'
targetCompatibility = '14'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile).each {
    it.options.compilerArgs += '--enable-preview'
}

tasks.withType(JavaExec).each {
    it.jvmArgs += '--enable-preview'
}

tasks.withType(Test).each {
    it.jvmArgs += '--enable-preview'
}

dependencies {
    implementation project(':common')
    implementation 'com.jayway.jsonpath:json-path:2.4.0'
    // javascript
    implementation 'org.graalvm.js:js:20.0.0'
    implementation 'org.graalvm.js:js-scriptengine:20.0.0'
    // postgresql
    implementation 'org.postgresql:postgresql:42.2.16'
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // test
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
    // test environment
    environment([
            // nano
            '--nano.nanoApi'              : 'http://localhost:8000',
            '--nano.nanoApiToken'         : 'token',
            // jdbc
            '--spring.datasource.url'     : 'jdbc:postgresql://localhost:5432/postgres',
            '--spring.datasource.username': 'postgres',
            '--spring.datasource.password': 'password'
    ])
}
