plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'nano'

sourceCompatibility = '14'
targetCompatibility = '14'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.compilerArgs += '--enable-preview'
}

tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}

tasks.withType(Test) {
    jvmArgs += '--enable-preview'
}

processResources {
    def nodeModulesDir = "${rootDir}/node_modules"
    if (!file(nodeModulesDir).exists()) {
        dependsOn rootProject.installNodeModules
    }

    from(nodeModulesDir) {
        include "typescript/lib/typescript.js"
        include "less/dist/less.js"
        into 'scripting'
    }
    from(nodeModulesDir) {
        include "react/umd/*.js"
        include "react-dom/umd/*.js"
        into 'static/modules'
    }
}

dependencies {
    // json path
    implementation 'com.jayway.jsonpath:json-path:2.4.0'
    // javascript
    implementation 'org.graalvm.js:js:20.0.0'
    implementation 'org.graalvm.js:js-scriptengine:20.0.0'
    // postgresql
    implementation 'org.postgresql:postgresql:42.2.16'
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // project common
    implementation project(':common')
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // test
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}
